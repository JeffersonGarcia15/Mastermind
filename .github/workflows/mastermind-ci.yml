# Credits to: https://stackoverflow.com/questions/64364989/github-actions-how-to-run-test-inside-container
name: mastermind-ci
on: [push, pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies for linting
        run: pip install -r app/requirements.txt

      - name: Lint code
        run: flake8 app/

      # Commenting out for now, will come back to it if I have time after finishing the UI!
      ###################################################################################### 
      # # Error: Cannot locate .env.tet
      # # Credits To: https://stackoverflow.com/questions/73314835/end-to-end-test-suite-cant-retrieve-env-variables-in-github-actions-but-works
      # - name: Create .env.test
      #   working-directory: app
      #   run: |
      #     echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.test
      #     echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.test
      #     echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.test
      #     echo "SQLALCHEMY_DATABASE_URI=${{ secrets.SQLALCHEMY_DATABASE_URI }}" >> .env.test
      #     echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.test

      # - name: Build and start test environment
      # # Specifying directory because of this error under GitHub Actions: Run pip install -r requirements.txt 
      # # ERROR: Could not open requirements file: [Errno 2] No such file or directory: 'requirements.txt'
      # # Error: Process completed with exit code 1.
      #   working-directory: app
      #   # error: line 1: docker-compose: command not found
      #   # Credits To: https://github.com/orgs/community/discussions/116610
      #   run: docker compose -f docker-compose-test.yml -p mastermind_test up -d --build

      # - name: Wait for services
      #   run: sleep 10

      # - name: Run migrations
      #   working-directory: app
      #   run: docker compose -f docker-compose-test.yml -p mastermind_test exec test_app flask db upgrade

      # - name: Run tests inside docker
      #   working-directory: app
      #   run: docker compose -f docker-compose-test.yml -p mastermind_test exec test_app pytest tests/ -s

      # - name: Tear down
      #   working-directory: app
      #   run: docker compose -f docker-compose-test.yml -p mastermind_test down
